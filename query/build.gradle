apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "signing"
apply plugin: "checkstyle"

repositories {
    mavenCentral()
}

group = rootProject.group
version = rootProject.version
description = "Queries for calendars."

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.1"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.1"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    title = "CalQL Query v${project.version}"
    options {
        locale = "en_US"
        encoding = "UTF-8"
        overview = "src/main/html/overview.html"
        links "https://docs.oracle.com/javase/8/docs/api/"
    }
}

jar {
    from rootProject.file("LICENSE")
}

sourcesJar {
    from rootProject.file("LICENSE")
}

javadocJar {
    from rootProject.file("LICENSE")
}

publishing {
    publications {
         maven(MavenPublication) {
            afterEvaluate { project ->
                groupId = project.group
                artifactId = project.name
            }

            from components.java
             // javadocJar and sourcesJar are added by java.withJavadocJar() and java.withSourcesJar() above.
             // See: https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"

                afterEvaluate { project ->
                    name = project.name
                    description = project.description
                }
                url = "https://github.com/dmikurube/calql-java"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = "Dai MIKURUBE"
                        email = "dmikurube@acm.org"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/dmikurube/calql-java.git"
                    developerConnection = "scm:git:git@github.com:dmikurube/calql-java.git"
                    url = "https://github.com/dmikurube/calql-java"
                }
            }
        }
    }

    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

test {
    useJUnitPlatform()
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

tasks.withType(Checkstyle) {
    reports {
        outputs.upToDateWhen { false }
    }
}

checkstyle {
    toolVersion "8.42"
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
    configProperties = [
        "checkstyle.config.path": file("${rootProject.projectDir}/config/checkstyle")
    ]
    ignoreFailures = false
    maxWarnings = 0
}
